
기능별 분리

# 연결 / Net_Socket
소켓 - 현재 tcp / 이후에 udp

# 데이터 송수신 / Net_IO
1단 - 스레드 추가
2단 - IOCP
IO에서 control까지 담당해야한다.
현재 소극적인 비동기에서
능동적인 비동기로 전환해야한다.
> 소극적인 비동기를 별도 스레드 생성으로 만들긴했다.

/////
그런데 데이터 송수신을 담당하는 Net_IO에서 데이터의 구조에 따라
코드가 변경되면 안된다.
-> 버퍼 크기가 데이터 구조를 가진 Net_Data에 의해 결정되어야하고
Net_IO 클래스의 로직은 Net_Data를 다룸으로서 의존성이 약화되지만
일단은 수신하거나 송신할 때 버퍼의 크기를 결정해야하기 때문에
데이터 직렬화나 가변 데이터들에 대한 추가 데이터를 만들어야한다.
그리고 이런 기능을 어디에서 담당해야하나?
1. Net_IO -> 데이터의 송수신 시 사용하는 기능이기 때문에.
2. Net_Data -> 데이터의 구조가 변경된다고 데이터 송수신 코드가 변경되어야하면 문제가 있는 코드이다.
3. 별도의 클래스 추가 -> Net_Data와 Net_IO 사이에 송수신을 위한 데이터 처리를 담당하는 클래스를 추가한다.

=== 제한 사항
데이터 직렬화까지는 우선 생각하지말자
3번을 선택하지만 우선은 미구현으로.

-----데이터 처리와 데이터 구조를 분리해야한다.
# 데이터 구조 / Net_Data


# 데이터 처리 / Net_DataControl -> 


우선은 추가적인 데이터 처리나 오용방지는 뒤로 미루자

//////////////////////////////////////////////////
//////////////////////////////////////////////////
//////////////////////////////////////////////////

서버 측
server_run

---
클라이언트와 동일하게
데이터 구조 변경에 따라 변경되지 않아도 작동해야하는 코드와
데이터 구조 변경에 따라 변경해야하는 코드로 나눈다.
전자는 소켓, 데이터 송수신
후자는 데이터 구조

+ 송수신 데이터 처리
---
Server_Socket
Server_IO
Server_DataCtrl

DataStruct

데이터 송수신






